---
# Bad ansible! This playbook is an example of poor/bad practices!
# Bad practices may include:
#
#   Poor formatting and structure
#   Poor use of YAML - but good enough to parse
#   Inconsistent style
#   Incorrect use of modules
#   Poor module choice
#   Unclear names
#   Hard coding / poor use of variables
#   Roles - what are roles?
#   Bare variables
#   No use of handlers

- name: configuration
  hosts: all
  become: true
  tasks:
  - name: enable repos
    template:
      src: ./open_three-tier-app.repo
      dest: /etc/yum.repos.d/open_three-tier-app.repo
      mode: 0644


- name: deploy haproxy
  hosts: frontends
  become: true
  tasks:
  - name: install http
    package:
      name: httpie
      state: latest
  - name: install HAProxy
    package:
      name: haproxy
      state: latest
  #- name: enable HAProxy
  #  service:
  #    name: haproxy
  #    state: started
  - name: configure haproxy
    template:
      src: ./haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
    notify: restart_HAproxy
  handlers:
  - name: restart_HAproxy
    service:
      name: haproxy
      state: restarted
      enabled: yes


- name: deploy tomcat
  hosts: apps
  become: true
  tasks:
  - name: install tomcat
    package:
      name: tomcat
      state: latest
  - name: enable tomcat at boot
    service:
      name: tomcat
      enabled: yes
  - name: create ansible and ROOT directories for tomcat
    file:
      path: "{{item}}"
      state: directory
    loop:
      - /usr/share/tomcat/webapps/ROOT
      - /usr/share/tomcat/webapps/ansible
  - name: copy static index.html to tomcat webapps/ROOT/index.html
    template:
      src: index.html.j2
      dest: /usr/share/tomcat/webapps/ROOT/index.html
      mode: 0644
  - name: copy index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.ansible.j2
      dest: /usr/share/tomcat/webapps/ansible/index.html
  - name: start tomcat
    service:
      name: tomcat
      state: started
  - name: install apache
    yum:
      name: httpd
      state: latest
  - name: enable and start apache
    service:
      name: httpd
      state: started
      enabled: yes


- name: deploy postgres
  hosts: appdbs
  become: true
  vars:
    postgresql_data_dir: /var/lib/pgsql/data
  tasks:
  - name: install postgres
    yum:
      name: postgresql-server
      state: latest
  - name: enable apache at boot
    service:
      name: postgresql
      enabled: yes
  - name: Check if PostgreSQL database is initialized looking for /var/lib/pgsql/data
    stat:
      path: "{{ postgresql_data_dir }}/PG_VERSION"
    register: pgdata_dir_version
 # only run the next task once!
  - name: initilize postgres
    command: postgresql-setup initdb
    when: not pgdata_dir_version.stat.exists

  - name: start postgres
    service:
      name: postgresql.service
      state: started
      enabled: yes


